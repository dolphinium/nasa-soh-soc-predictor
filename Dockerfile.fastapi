# Use an official Python runtime as a parent image
FROM python:3.10-slim

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file first to leverage Docker cache
COPY ./requirements.txt /app/

# Install any needed packages specified in requirements.txt
# Using --no-cache-dir can reduce image size slightly
RUN pip install --no-cache-dir -r /app/requirements.txt

# Copy the rest of the application code (API and necessary data/models)
# Copy API code
COPY ./api /app/api
# Copy models (adjust if your paths differ)
COPY ./models /app/models
# Copy preprocessed data (adjust if your paths differ)
COPY ./data/processed_data /app/data/processed_data

# Make port 5000 available to the world outside this container
# (This matches the port uvicorn will run on inside the container)
EXPOSE 8000


# Command to run the application using uvicorn
# Ensure main:app matches your file and FastAPI instance name
# Use 0.0.0.0 to make it accessible from outside the container
CMD ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000"]